MEM_TYPE = [
    {'regex': r'^\s*$', 'type': 'Unknown'},
    {'regex': r'^\[stack', 'type': 'Stack'},
    {'regex': r'^\[heap\]', 'type': 'Native'},
    {'regex': r'^\[anon:stack_and_tls:', 'type': 'Stack'},
    {'regex': r'^\[anon:scudo:', 'type': 'Native'},
    {'regex': r'^\[anon:libc_malloc\]', 'type': 'Native'},
    {'regex': r'^\[anon:dalvik-zygote space', 'type': 'Dalvik', 'subtype': 'Zygote'},
    {'regex': r'^\[anon:dalvik-non moving space', 'type': 'Dalvik', 'subtype': 'NonMoving'},
    {'regex': r'^\[anon:dalvik-main space', 'type': 'Dalvik', 'subtype': 'Normal'},
    {'regex': r'^\[anon:dalvik-large object space', 'type': 'Dalvik', 'subtype': 'Large'},
    {'regex': r'^\[anon:dalvik-jit-code-cache', 'type': 'DalvikOther', 'subtype': 'AppCodeCache'},
    {'regex': r'^\[anon:dalvik-indirect ref', 'type': 'DalvikOther', 'subtype': 'IndirectRefTable'},
    {'regex': r'^\[anon:dalvik-free list large object space', 'type': 'Dalvik', 'subtype': 'Large'},
    {'regex': r'^\[anon:dalvik-data-code-cache', 'type': 'DalvikOther', 'subtype': 'AppCodeCache'},
    {'regex': r'^\[anon:dalvik-alloc space', 'type': 'Dalvik', 'subtype': 'Normal'},
    {'regex': r'^\[anon:dalvik-LinearAlloc', 'type': 'DalvikOther', 'subtype': 'LinearAlloc'},
    {'regex': r'^\[anon:dalvik-CompilerMetadat', 'type': 'DalvikOther', 'subtype': 'CompilerMetadata'},
    {'regex': r'^\[anon:dalvik-', 'type': 'DalvikOther'},
    {'regex': r'^\[anon:GWP-ASan', 'type': 'Native'},
    {'regex': r'^\[anon:', 'type': 'OtherAnon'},
    {'regex': r'^\/memfd:jit-zygote-cache', 'type': 'DalvikOther', 'subtype': 'ZygoteCodeCache'},
    {'regex': r'^\/memfd:jit-cache', 'type': 'DalvikOther', 'subtype': 'AppCodeCache'},
    {'regex': r'^\/dev\/kgsl-3d0', 'type': 'GLDev'},
    {'regex': r'^\/dev\/ashmem\/jit-zygote-cache', 'type': 'DalvikOther', 'subyype': 'ZygoteCodeCache'},
    {'regex': r'^\/dev\/ashmem\/CursorWindow', 'type': 'Cursor'},
    {'regex': r'^\/dev\/ashmem', 'type': 'Ashmem'},
    {'regex': r'^\/dev\/', 'type': 'OtherDev'},
    {'regex': r'.+\.ttf$', 'type': 'Ttf'},
    {'regex': r'.+\.so$', 'type': 'So'},
    {'regex': r'.+\.oat$', 'type': 'Oat'},
    {'regex': r'.+\.jar$', 'type': 'Jar'},
    {'regex': r'.+\.apk$', 'type': 'Apk'},
    {'regex': r'.+(\@boot|\/boot|\/apex).*\.vdex$', 'type': 'Dex', 'subtype': 'BootVdex'},
    {'regex': r'.+(\@boot|\/boot|\/apex).*\.(art|art\])$', 'type': 'Art', 'subtype': 'BootArt'},
    {'regex': r'.+\.vdex$', 'type': 'Dex', 'subtype': 'AppDex'},
    {'regex': r'.+\.(odex|dex)$', 'type': 'Dex', 'subtype': 'AppDex'},
    {'regex': r'.+\.(art|art\])$', 'type': 'Art', 'subtype': 'AppArt'},
    {'regex': r'.+', 'type': 'OtherMap'}
]
